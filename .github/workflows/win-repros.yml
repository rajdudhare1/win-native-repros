name: win-repros
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        repro:
          - { name: zlib-msvc,    crate: repro-zlib,     toolchain: msvc }
          - { name: kafka-gnu,    crate: repro-kafka,    toolchain: gnu }
          - { name: jemalloc-gnu, crate: repro-jemalloc, toolchain: gnu }

    steps:
      - uses: actions/checkout@v4

      # Install Rust host toolchain (MSVC) and also the GNU target for cross builds
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-gnu

      # ---------- GNU toolchain only when needed ----------
      - name: Setup MSYS2 (only for GNU jobs)
        if: matrix.repro.toolchain == 'gnu'
        run: |
          choco install msys2 -y --no-progress
          C:\tools\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
          C:\tools\msys64\usr\bin\bash -lc "pacman -S --noconfirm base-devel \
            mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake \
            mingw-w64-x86_64-ninja mingw-w64-x86_64-nasm \
            mingw-w64-x86_64-pkg-config autoconf automake libtool"
          echo "C:\tools\msys64\mingw64\bin" >> $env:GITHUB_PATH

      # ---------- MSVC build (host toolchain) ----------
      - name: Build ${{ matrix.repro.name }} (MSVC)
        if: matrix.repro.toolchain == 'msvc'
        env:
          RUST_BACKTRACE: "1"
        run: |
          cargo build -p ${{ matrix.repro.crate }} -vv

      # ---------- GNU build (cross with --target) ----------
      - name: Build ${{ matrix.repro.name }} (GNU)
        if: matrix.repro.toolchain == 'gnu'
        env:
          RUST_BACKTRACE: "1"
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
          AR: x86_64-w64-mingw32-ar
          PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
        run: |
          rustup target add x86_64-pc-windows-gnu
          cargo build -p ${{ matrix.repro.crate }} --target x86_64-pc-windows-gnu -vv

      # ---------- Artifacts (optional; helps inspect outputs) ----------
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.repro.name }}
          path: |
            target\**\${{ matrix.repro.crate }}.exe
            target\**\${{ matrix.repro.crate }}.dll
            target\**\${{ matrix.repro.crate }}.pyd
          if-no-files-found: warn